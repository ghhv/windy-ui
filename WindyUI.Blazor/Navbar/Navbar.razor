@inject NavigationManager NavigationManager;


<CascadingValue Value="this" IsFixed="true">
    <header class="bg-primary-dark shadow-lg">
        <div class="px-2 md:px-6">
            <div class="flex justify-between">
                <div class="relative flex items-center justify-between h-16">
                    <!--Sidebar for mobile since sidebar is always hidden there.-->
                    <MobileMenu IsOpen="IsMobileMenuOpen" ToggleMenu="ToggleMobileMenu" />
                    <div class="flex-1 flex items-center justify-center md:items-stretch md:justify-start">
                        @OptionsSection
                    </div>
                </div>
                <div class="flex-shrink-0 flex items-center p-4">
                    @MobileLogoSection
                </div>
                <div class="flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0">
                    @RightHandSection
                </div>
            </div>
        </div>
        <div class="@(!IsMobileMenuOpen ? "block" : "hidden") md:hidden sm:max-w-md">
            @MobileOptionsSections
        </div>
    </header>
</CascadingValue>

@code {

    [Parameter]
    public RenderFragment? MobileLogoSection { get; set; }

    [Parameter]
    public RenderFragment? RightHandSection { get; set; }

    [Parameter]
    public RenderFragment? OptionsSection { get; set; }

    [Parameter]
    public RenderFragment? MobileOptionsSections { get; set; }

    [Parameter]
    public List<NavigationOption> Options { get; set; } = new List<NavigationOption>();

    public bool IsMobileMenuOpen { get; set; } = false;
    public string LogoIsotypeUrl { get; set; } = "";
    public string LogoTextUrl { get; set; } = "";

    public void ToggleMobileMenu()
    {
        IsMobileMenuOpen = !IsMobileMenuOpen;
    }
}
